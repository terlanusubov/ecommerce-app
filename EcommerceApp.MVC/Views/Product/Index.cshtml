@model ProductDto
 <!-- breadcrumb-area-start -->
<section class="breadcrumb-area" data-background="/img/bg/page-title.png">
    <div class="container">
        <div class="row">
            <div class="col-xl-12">
                <div class="breadcrumb-text text-center">
                    <h1>Our Shop</h1>
                    <ul class="breadcrumb-menu">
                        <li><a href="@Url.Action("Index","Home")">home</a></li>
                        <li><span>shop details</span></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- breadcrumb-area-end -->
<!-- shop-area start -->
<section class="shop-details-area pt-100 pb-100">
    <div class="container">
        <div class="row">
            <div class="col-xl-6 col-lg-4">
                <div class="product-details-img mb-10">
                    <div class="tab-content" id="myTabContentpro">

                        @{

                            var counter = 0;
                        }
                        <div class="tab-pane fade show active" id="main_image" role="tabpanel">
                            <div class="product-large-img">
                                <img src="@Model.MainImage" alt="">
                            </div>
                        </div>


                        @foreach (var item in Model.Images)
                        {

                            <div class="tab-pane fade" id="image_@counter" role="tabpanel">
                                <div class="product-large-img">
                                    <img src="@item" alt="">
                                </div>
                            </div>

                            counter++;
                        }

                    </div>
                </div>
                <div class="shop-thumb-tab mb-30">
                    <ul class="nav" id="myTab2" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#main_image" role="tab" aria-selected="true">
                                <img src="@Model.MainImage" alt="">
                            </a>
                        </li>

                        @{
                            counter = 0;
                        }
                        @foreach (var item in Model.Images)
                        {
                            <li class="nav-item">
                                <a class="nav-link" id="image_@counter" data-toggle="tab" href="#image_@counter" role="tab" aria-selected="false">
                                    <img src="@item" alt="">
                                </a>
                            </li>

                            counter++;
                        }

                    </ul>
                </div>
            </div>
            <div class="col-xl-6 col-lg-8">
                <div class="product-details mb-30 pl-30">
                    <div class="details-cat mb-20">
                        <a href="#">@Model.CategoryName</a>
                    </div>
                    <h2 class="pro-details-title mb-15">@Model.Name</h2>
                    <div class="details-price mb-20">
                        @if (Model.AfterDiscountPrice != null)
                        {
                            <span>$@Model.AfterDiscountPrice USD</span>
                            <span class="old-price">$@Model.Price USD</span>
                        }
                        else
                        {
                            <span>$@Model.Price USD</span>
                        }

                    </div>
                    <div class="product-variant">

                        <div class="product-color variant-item">
                            <div class="variant-name">
                                <span>Colors</span>
                            </div>
                            <ul class="shop-link shop-color">
                                @foreach (var item in Model.Colors)
                                {
                                    if (item.Any(c => c.ProductId == Model.ProductId))
                                    {
                                        <li class="active"><a href="@Url.Action("Index", "Product", new { productId = Model.ProductId , color = item.Key})"><span style="background:@item.Key" class="@item.Key"></span></a></li>
                                    }
                                    else
                                    {
                                        <li><a href="@Url.Action("Index", "Product", new { productId = item.FirstOrDefault()?.ProductId, color = item.Key })"><span style="background:@item.Key" class="@item.Key"></span></a></li>
                                    }

                                }

                            </ul>
                        </div>

                        <div class="product-size variant-item">
                            <div class="variant-name">
                                <span>size</span>
                            </div>
                            <ul class="shop-link shop-size">
                                @foreach (var item in Model.Sizes)
                                {
                                    if (item.Any(c => c.ProductId == Model.ProductId))
                                    {
                                        <li class="active"><a href="@Url.Action("Index","Product",new { productId = Model.ProductId})">@item.Key   </a></li>
                                    }
                                    else
                                    {
                                        <li><a href="@Url.Action("Index","Product",new { productId = item.FirstOrDefault()?.ProductId})">@item.Key   </a></li>
                                    }

                                }


                            </ul>
                        </div>

                        <div class="product-desc variant-item">
                            <p>
                                @Model.ShortDesc
                            </p>
                        </div>

                        <div class="product-info-list variant-item">
                            <ul>
                                <li><span>Brands:</span> @Model.BrandName</li>
                                <li><span>Product Code:</span> @Model.ProductCode</li>
                                @if (Model.HasStock)
                                {
                                    <li><span>Stock:</span> <span class="in-stock">In Stock</span></li>
                                }
                                else
                                {
                                    //todo: in stock sozunu deyis
                                    <li><span>Stock:</span> <span class="in-stock">Out of Stock</span></li>
                                }
                            </ul>
                        </div>

                        <div class="product-action-details variant-item">
                            <div class="product-details-action">
                                <form action="#">
                                    <div class="plus-minus">
                                        <div class="cart-plus-minus"><input id="cart-count" type="text" value="1" /></div>
                                    </div>
                                    <button class="details-action-icon" type="submit"><i class="fas fa-heart"></i></button>
                                    <button class="details-action-icon" type="submit"><i class="fas fa-hourglass"></i></button>
                                    <div class="details-cart mt-40">
                                        <button data-productId="@Model.ProductId" id="add-cart" type="button" class="btn theme-btn">purchase now</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-50">
            <div class="col-xl-8 col-lg-8">
                <div class="product-review">
                    <ul class="nav review-tab" id="myTabproduct" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="home-tab6" data-toggle="tab" href="#home6" role="tab" aria-controls="home"
                               aria-selected="true">Description </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="profile-tab6" data-toggle="tab" href="#profile6" role="tab" aria-controls="profile"
                               aria-selected="false">Reviews (2)</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent2">
                        <div class="tab-pane fade show active" id="home6" role="tabpanel" aria-labelledby="home-tab6">
                            <div class="desc-text">
                                <p>
                                    @Model.Description
                                </p>

                            </div>
                        </div>
                        <div class="tab-pane fade" id="profile6" role="tabpanel" aria-labelledby="profile-tab6">
                            <div class="desc-text review-text">
                                @await Component.InvokeAsync("ProductReview", new
                                {
                               productId = Model.ProductId
                                })

                                @*TODO: Make view component for this*@
                                <div class="review-box mt-50">

                                    @if (Context.User.Identity.IsAuthenticated == true)
                                    {
                                        <h4>Add a Review</h4>
                                        <div class="your-rating mb-40">
                                            <span>Your Rating:</span>
                                            <div class="rating-list">
                                                <a data-id="1" href="#">
                                                    <i class="far fa-star"></i>
                                                </a>
                                                <a data-id="2" href="#">
                                                    <i class="far fa-star"></i>
                                                </a>
                                                <a data-id="3" href="#">
                                                    <i class="far fa-star"></i>
                                                </a>
                                                <a data-id="4" href="#">
                                                    <i class="far fa-star"></i>
                                                </a>
                                                <a data-id="5" href="#">
                                                    <i class="far fa-star"></i>
                                                </a>
                                            </div>
                                        </div>
                                        @* <form method="post" class="review-form" action="@Url.Action("AddReview","Product")"> *@
                                            <div class="row">
                                                <input type="hidden" name="ProductId" id="add-review-productId" value="@Model.ProductId" />
                                                <div class="col-xl-12">
                                                    <label for="message">YOUR REVIEW</label>
                                                    <textarea name="Description" id="message" cols="30" rows="10"></textarea>
                                                </div>
                                                <div class="col-xl-12">
                                                    <button id="add-review-button" type="button" class="btn theme-btn">Add your Review</button>
                                                </div>
                                            </div>
                                        @* </form> *@
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-4 col-lg-4">
                <div class="pro-details-banner">
                    <a href="shop.html"><img src="img/banner/pro-details.jpg" alt=""></a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- shop-area end -->
@section Styles
{

    <style>
        .shop-link.shop-color li.active {
            border: 1px solid red;
        }
    </style>

}

@section Scripts{

    <script>

        let delIcons = document.querySelectorAll(".del-icon a");

        for(let delIcon of delIcons){
            delIcon.addEventListener("click",function(e){
                e.preventDefault();

                let productId = delIcon.getAttribute("data-productId");
                const xhttp = new XMLHttpRequest();
                xhttp.onload = function () {
                    let res = JSON.parse(this.responseText);
                    if(res.status == 400){
                        alert("Xeta");
                        return;
                    }

                    alert("ugurlu emeliyyat");
                    //TODO : delete cart from UI

                    }

                xhttp.open("GET", "/cart/delete?productId=" + productId, true);

                xhttp.send();
            })
        }


        //Add to basket
        let cartButton = document.querySelector("#add-cart");

        cartButton.addEventListener("click", function () {
            let countValue = document.querySelector("#cart-count").value;

            let productId = this.getAttribute("data-productId");
           
            let cartAddModel = {
                ProductId: productId,
                Count: countValue
            };

            const xhttp = new XMLHttpRequest();
            xhttp.onload = function () {

                let res = JSON.parse(this.responseText);

                if (res.status == 400) {
                    alert("xeta");
                    return;
                }

                let miniCart = document.querySelector(".minicart");

                let miniCartHtml = miniCart.innerHTML;

                if(res.data.isExists == false){
                    let newCartItem = `<li data-id="${res.data.productId}">
                                <div class="cart-img">
                                    <a href="product-details.html">
                                        <img src="${res.data.image}" alt="" />
                                    </a>
                                </div>
                                <div class="cart-content">
                                    <h3>
                                        <a href="/product/index?productId=${res.data.productId}">${res.data.name}</a>
                                    </h3>
                                    <div class="cart-price">

                                    </div>
                                </div>
                                <div class="del-icon new">
                                    <a data-productId=${res.data.productId} href="#">
                                        <i class="far fa-trash-alt"></i>
                                    </a>
                                </div>
                            </li>`;


                    let element = newCartItem + miniCartHtml;

                    miniCart.innerHTML = element;
                }
               


                let cartCount = document.querySelector(".cart-count");

                cartCount.innerText = Number(cartCount.innerText) + Number(countValue);

                document.querySelector(".total-price span:last-child").innerText = "$" + res.data.totalPrice;

                let delNewIcons = document.querySelectorAll(".del-icon.new a");

                //TODO: Event duplication

                // for (let delIcon of delNewIcons) {
                //     if (typeof delIcon.onclick != "function") {
                //         delIcon.addEventListener("click", function (e) {
                //             e.preventDefault();

                //             let productId = delIcon.getAttribute("data-productId");
                //             alert(productId);
                //         });
                //     }
                   
                // }
            }

            xhttp.open("POST", "/cart/add", true);
            xhttp.setRequestHeader('Content-Type', 'application/json')

            xhttp.send(JSON.stringify(cartAddModel));


        });


        //Size 
        
        let size = document.querySelectorAll(".shop-size li a");
        for (let s of size) {
            s.addEventListener("click", function (e) {
                e.preventDefault();

                let color = document.querySelector(".shop-color li.active a span");

                let newLink = s.getAttribute("href");
                newLink = newLink + "&color=" + color.getAttribute("class");

                let linkElement = document.createElement("a");
                linkElement.style.display = "none";
                linkElement.setAttribute("href", newLink);

                document.body.appendChild(linkElement);

                linkElement.click();


            });
        }
        
       //Size end

        let rating = null;

        let ratingListLinks = document.querySelectorAll(".rating-list a");

        for (let link of ratingListLinks) {
            link.addEventListener("click", function (e) {
                e.preventDefault();

                rating = link.getAttribute("data-id");
                
            })
        }


        let addReviewButton = document.querySelector("#add-review-button");

        addReviewButton.addEventListener("click", function () {
            let productId = document.querySelector("#add-review-productId").value;
            let description = document.querySelector("#message").value;

            let data = {
                ProductId: productId,
                Description: description,
                Rating: rating
            };


            const xhttp = new XMLHttpRequest();
            xhttp.onload = function () {

                document.querySelector("#message").value = "";
                rating = null;


                let result = JSON.parse(this.responseText);
                if (result.status == 400) {
                    alert("Xeta bas verdi!");
                    return;
                }


                let commentWrapper = document.createElement("div");

                commentWrapper.className = "product-commnets-list mb-25 pb-15";

                let ratingDiv = `   <div class="pro-rating">`;

                for (let i = 0; i < result.rate; i++) {
                    ratingDiv += '<i class="far fa-star"></i>';
                }

                ratingDiv += ' </div>';

                let comment = `
                    <div class="pro-comments-img">
                        <img style="width:50px;" src="${result.image}" alt="">
                    </div>
                    <div class="pro-commnets-text">
                        <h4>
                            ${result.name} ${result.surname} -
                            <span>${result.date}</span>
                        </h4>
                       ${ratingDiv}
                        <p>
                                    ${description}
                        </p>
                    </div>
              `;

                commentWrapper.innerHTML = comment;
               
                let descText = document.querySelector(".desc-text .product-commnets");

                descText.insertBefore(commentWrapper,descText.firstChild)

            }

            xhttp.open("POST","/product/addReview",true);
            xhttp.setRequestHeader('Content-Type', 'application/json')

            xhttp.send(JSON.stringify(data));
        })


    </script>

}